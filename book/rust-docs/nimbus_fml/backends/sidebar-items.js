window.SIDEBAR_ITEMS = {"enum":[["VariablesType","The generated code is running against hand written code to give type safe, error free access to JSON. This is the `Variables` object. This enum gives the underlying types that the `Variables` object supports."]],"mod":[["experimenter_manifest",""],["kotlin",""],["swift",""]],"trait":[["CodeDeclaration","A trait that is able to render a declaration about a particular member declared in the `FeatureManifest`. Like `CodeType`, it can render declaration code and imports. All methods are optional, and there is no requirement that the trait be used for a particular member. Thus, it can also be useful for conditionally rendering code."],["CodeOracle","An object to look up a foreign language code specific renderer for a given type used. Every [TypeRef] referred to in the [crate::intermediate_representation::FeatureManifest] should map to a corresponding `CodeType`."],["CodeType","A Trait to emit foreign language code to handle referenced types. A type which is specified in the FML (i.e. a type that a variable declares itself of) will have a `CodeDeclaration` as well, but for types used e.g. primitive types, Strings, etc only a `CodeType` is needed."],["LiteralRenderer",""]],"type":[["TypeIdentifier",""]]};